---
- name: Create VMs
  hosts: localhost
  tags: vm
  tasks:
  - name: Create Clickhouse vm
    ycc_vm:
      auth:
        token: "{{ yc_token }}"
      name: clickhouse
      login: "{{ yc_ssh_username }}"
      public_ssh_key: "{{ yc_ssh_pkey }}"
      hostname: clickhouse-01
      zone_id: "{{ yc_zone }}"
      folder_id: "{{ yc_folder_id }}"
      platform_id: "Intel Cascade Lake"
      core_fraction: 100
      cores: 2
      memory: 4
      image_id: "{{ centos7 }}"
      disk_type: hdd
      disk_size: 50
      subnet_id: "{{ yc_subnet_id }}"
      assign_public_ip: true
      state: present

  - name: Start Clickhouse vm
    tags: start
    ycc_vm:
      auth:
        token: "{{ yc_token }}"
      name: clickhouse
      operation: start
      folder_id: "{{ yc_folder_id }}"

  - name: Create Vector vm
    ycc_vm:
      auth:
        token: "{{ yc_token }}"
      name: vector
      login: "{{ yc_ssh_username }}"
      public_ssh_key: "{{ yc_ssh_pkey }}"
      hostname: vector-01
      zone_id: "{{ yc_zone }}"
      folder_id: "{{ yc_folder_id }}"
      platform_id: "Intel Cascade Lake"
      core_fraction: 100
      cores: 2
      memory: 4
      image_id: "{{ centos7 }}"
      disk_type: hdd
      disk_size: 50
      subnet_id: "{{ yc_subnet_id }}"
      assign_public_ip: true
      state: present

  - name: Start Vector vm
    tags: start
    ycc_vm:
      auth:
        token: "{{ yc_token }}"
      name: vector
      operation: start
      folder_id: "{{ yc_folder_id }}"

  - name: Create Lighthouse vm
    tags: lighthouse
    ycc_vm:
      auth:
        token: "{{ yc_token }}"
      name: lighthouse
      login: "{{ yc_ssh_username }}"
      public_ssh_key: "{{ yc_ssh_pkey }}"
      hostname: lighthouse-01
      zone_id: "{{ yc_zone }}"
      folder_id: "{{ yc_folder_id }}"
      platform_id: "Intel Cascade Lake"
      core_fraction: 100
      cores: 2
      memory: 4
      image_id: "{{ centos7 }}"
      disk_type: hdd
      disk_size: 50
      subnet_id: "{{ yc_subnet_id }}"
      assign_public_ip: true
      state: present

  - name: Start Lighthouse vm
    tags: start
    ycc_vm:
      auth:
        token: "{{ yc_token }}"
      name: lighthouse
      operation: start
      folder_id: "{{ yc_folder_id }}"

- name: Collect instances
  hosts: localhost
  tags: always
  gather_facts: false
  tasks:
    - name: Display YC instances
      ansible.builtin.command: yc compute instance list --format=yaml --folder-name=default
      register: yc_instances
      failed_when: yc_instances.rc != 0
      changed_when: false
    - name: Set fact
      ansible.builtin.set_fact:
        _yc_instances: '{{ yc_instances.stdout | from_yaml }}'
    - name: Add hosts
      ansible.builtin.add_host:
        name: "{{ item['network_interfaces'][0]['primary_v4_address']['one_to_one_nat']['address'] }}"
        groups: "{{ item['name'] }}"
      with_items: "{{ _yc_instances }}"

- name: Install Clickhouse
  hosts: clickhouse
  tags: clickhouse, full
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
        enabled: true
  tasks:
    - name: Get Clickhouse
      block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: '0644'
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: '0644'
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
    - name: Set listen host
      become: true
      ansible.builtin.template:
        src: templates/clickhouse.xml.j2
        dest: /etc/clickhouse-server/config.d/listen_host.xml
        mode: '0644'
      notify: Start clickhouse service
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0
    - name: Create table
      ansible.builtin.command: "clickhouse-client -q \
      'CREATE TABLE logs.logs ( \
      message String ) \
      ENGINE = MergeTree() \
      ORDER BY tuple();'"
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc != 57
      changed_when: create_table.rc == 0

- name: Install Vector
  hosts: vector
  tags: vector, full
  handlers:
    - name: Start vector service
      become: true
      ansible.builtin.service:
        enabled: true
        name: vector
        state: restarted
  tasks:
    - name: Add the user 'vector'
      become: true
      ansible.builtin.user:
        name: vector
        uid: 900
    - name: Create vector directory
      become: true
      become_user: vector
      ansible.builtin.file:
        path: "{{ home }}"
        state: directory
        mode: '0755'
    - name: Get vector archive
      become: true
      become_user: vector
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/0.27.0/vector-0.27.0-x86_64-unknown-linux-musl.tar.gz"
        dest: "{{ home }}/vector.tar.gz"
        owner: vector
        group: vector
        mode: '0644'
    - name: Unarchive vector
      become: true
      become_user: vector
      ansible.builtin.unarchive:
        extra_opts: ['--strip-components=2']
        src: "{{ home }}/vector.tar.gz"
        dest: "{{ home }}"
        remote_src: true
    - name: Install Vector
      block:
        - name: Create symlink for bin
          become: true
          ansible.builtin.file:
            src: "{{ home }}/bin/vector"
            dest: /usr/bin/vector
            owner: vector
            group: vector
            state: link
        - name: Create data directory
          become: true
          ansible.builtin.file:
            path: "/var/lib/vector"
            state: directory
            mode: '0755'
            owner: vector
            group: vector
        - name: Create directory in etc
          become: true
          ansible.builtin.file:
            path: "/etc/vector"
            state: directory
            mode: '0755'
        - name: Implement config
          become: true
          ansible.builtin.template:
            src: templates/vector.toml.j2
            dest: "{{ home }}/config/vector.toml"
            owner: vector
            group: vector
            mode: '0644'
        - name: Create symlink for config
          become: true
          ansible.builtin.file:
            src: "{{ home }}/config/vector.toml"
            dest: /etc/vector/vector.toml
            owner: vector
            group: vector
            state: link
        - name: Add systemD service
          become: true
          ansible.builtin.copy:
            src: "{{ home }}/etc/systemd/vector.service"
            dest: /etc/systemd/system
            remote_src: true
            owner: root
            group: root
            mode: '0644'
          notify: Start vector service
- name: Install Nginx
  hosts: lighthouse
  tags: lighthouse, full
  handlers:
    - name: Start nginx
      become: true
      ansible.builtin.service:
        name: nginx
        enabled: true
        state: restarted

    - name: Reload nginx
      become: true
      ansible.builtin.command: nginx -s reload
  tasks:
    - name: Install epel
      become: true
      ansible.builtin.yum:
        name: epel-release
        state: present
    - name: Install nginx
      become: true
      ansible.builtin.yum:
        name: nginx
        state: present
      notify: Start nginx
    - name: Create config
      become: true
      ansible.builtin.template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: '0644'
      notify: Reload nginx
- name: Install Lighthouse
  hosts: lighthouse
  tags: lighthouse, full
  handlers:
    - name: Reload nginx
      become: true
      ansible.builtin.command: nginx -s reload
    - name: Apply SELinux file context
      become: true
      ansible.builtin.command: restorecon -iRv {{ lh_location }}
      notify:
        - Reload nginx
  pre_tasks:
    - name: Install Git
      become: true
      ansible.builtin.yum:
        name: git
        state: present
  tasks:
    - name: Get LH repo
      ansible.builtin.git:
        repo: "{{ lh_repo }}"
        version: master
        dest: "{{ lh_location }}"
    - name: Set LH config
      become: true
      ansible.builtin.template:
        src: templates/lighthouse.conf.j2
        dest: /etc/nginx/conf.d/default.conf
        mode: '0644'
      notify:
        - Reload nginx
    - name: SELinux give access to html directory for nginx
      become: true
      community.general.sefcontext:
        target: '{{ lh_location }}(/.*)?'
        setype: httpd_sys_content_t
        state: present
      notify:
        - Apply SELinux file context
