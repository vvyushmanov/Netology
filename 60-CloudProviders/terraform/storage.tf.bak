### SERVICE ACCOUNTS AND KEYS ###

resource "yandex_iam_service_account" "bucket-sa" {
  name = "bucket-sa"
}

locals {
  main_sa_id = "aje13v45j6k7h9smsftk"
}

resource "yandex_resourcemanager_folder_iam_member" "bucket-sa-editor" {
  folder_id = local.folder_id
  role      = "storage.editor"
  member    = "serviceAccount:${yandex_iam_service_account.bucket-sa.id}"
}

resource "yandex_resourcemanager_folder_iam_member" "bucket-sa-kms" {
  folder_id = local.folder_id
  role      = "kms.keys.decrypter"
  member    = "serviceAccount:${yandex_iam_service_account.bucket-sa.id}"
}

resource "yandex_iam_service_account_static_access_key" "bucket-sa-static-key" {
  service_account_id = yandex_iam_service_account.bucket-sa.id
  description        = "static access key for object storage"
}

### BUCKETS ###

resource "yandex_storage_bucket" "bucket-main" {
  access_key = yandex_iam_service_account_static_access_key.bucket-sa-static-key.access_key
  secret_key = yandex_iam_service_account_static_access_key.bucket-sa-static-key.secret_key
  bucket     = "iushmanov-encrypted"
  folder_id = local.folder_id

  anonymous_access_flags {
    read = false
    list = false
  }

  server_side_encryption_configuration {
    rule {
      apply_server_side_encryption_by_default {
        kms_master_key_id = yandex_kms_symmetric_key.key-a.id
        sse_algorithm     = "aws:kms"
      }
    }
  }

  default_storage_class = "STANDARD"

  max_size = 5368709120

}

resource "yandex_storage_bucket" "static-site" {
  access_key = yandex_iam_service_account_static_access_key.bucket-sa-static-key.access_key
  secret_key = yandex_iam_service_account_static_access_key.bucket-sa-static-key.secret_key
  bucket     = "netology.saturnring.space"
  folder_id = local.folder_id

  anonymous_access_flags {
    read = true
    list = false
  }

  https {
    certificate_id = local.cert_id
  }

  website {
    index_document = "index.html"
    error_document = "error.html"
  }

  default_storage_class = "STANDARD"

  max_size = 5368709120

}

resource "yandex_dns_zone" "dns" {

  name = "netology"
  zone = "netology.saturnring.space."
  public = true
  
}

resource "yandex_dns_recordset" "aname" {
  zone_id = yandex_dns_zone.dns.id
  name = "@"
  type = "ANAME"
  ttl = 600
  data = [ "netology.saturnring.space.website.yandexcloud.net" ]

}

## OBJECTS ###

resource "yandex_storage_object" "twob" {
  access_key = yandex_iam_service_account_static_access_key.bucket-sa-static-key.access_key
  secret_key = yandex_iam_service_account_static_access_key.bucket-sa-static-key.secret_key
  bucket     = yandex_storage_bucket.bucket-main.id

  key = "2b.png"
  source = "assets/2B_Nier_Automata.png"
  acl = "public-read"
}

resource "yandex_storage_object" "index" {
  access_key = yandex_iam_service_account_static_access_key.bucket-sa-static-key.access_key
  secret_key = yandex_iam_service_account_static_access_key.bucket-sa-static-key.secret_key
  bucket     = yandex_storage_bucket.static-site.id

  key = "index.html"
  source = "assets/index.html"
  acl = "public-read"
}

resource "yandex_storage_object" "error" {
  access_key = yandex_iam_service_account_static_access_key.bucket-sa-static-key.access_key
  secret_key = yandex_iam_service_account_static_access_key.bucket-sa-static-key.secret_key
  bucket     = yandex_storage_bucket.static-site.id

  key = "error.html"
  source = "assets/error.html"
  acl = "public-read"
}

